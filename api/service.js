const { ethers } = require("ethers");
const fs = require("fs/promises");
const path = require("path");

const provider = new ethers.providers.JsonRpcProvider("http://127.0.0.1:7545");
const private_key =
  "0x1beb24396c7bc2f6b8def9a45fca87069a6158264f8f4248b7962d5a47a6c7a8";
const signer = new ethers.Wallet(private_key, provider);

const getContract = async () => {
  const contract_url = path.resolve(
    __dirname,
    "../build/contracts/TwoFactorAuth.json"
  );
  const data = JSON.parse(await fs.readFile(contract_url, "utf-8"));

  const contract = new ethers.Contract(
    data["networks"]["5777"]["address"],
    data.abi,
    provider
  );

  return contract.connect(signer);
};

getContract().then((contract) => {
  contract.on("GenerateOTP", (user, otp) => {
    console.log(user, parseInt(otp));
  });

  contract.on("Authenticated", (isAuth) => {
    console.log("OTP is " + isAuth);
  });
});

/**
 *
 * @param {username} username
 * @param {otp_seed} otp_seedt
 * @returns
 */
async function registerUser(username, otp_seed) {
  try {
    const contract = await getContract();
    const tx = await contract.registerUser(username, otp_seed, {
      from: signer.address,
      gasLimit: 5000000,
    });
    const receipt = await tx.wait();
    return receipt.transactionHash;
  } catch (error) {
    // console.log(error);
    throw new Error(error.info.error.data.reason);
  }
}

/**
 *
 * @returns otp generated by wallet
 */
async function generateOTP() {
  try {
    const contract = await getContract();
    const tx = await contract.generateOTP();
    const receipt = await tx.wait();

    return receipt;
  } catch (e) {
    // console.log(e, "error");
    throw new Error("Sth went wrong");
  }
}

async function authenticate(otp) {
  try {
    const contract = await getContract();
    const tx = await contract.authenticate(otp, {
      from: signer.address,
      gasLimit: 5000000,
    });
    const receipt = await tx.wait();

    return receipt.transactionHash;
  } catch (e) {
    console.log(e);
    throw new Error("Sth went wrong");
  }
}

module.exports = {
  registerUser,
  generateOTP,
  authenticate,
};
